syntax = "proto3";

package bc;

import "core.proto";

message HelpResponse {
    string help_text = 1;
}

message StatsResponse {
    int64 calls = 1;
}

message RpcTransaction {
    string from_addr = 1;
    string to_addr = 2;
    string amount = 3;
    string tx_fee = 4;
    string private_key_hex = 5;
}

enum RpcTransactionResponseStatus {
    Success = 0;
    Failure = 1;
}

message RpcTransactionResponse {
    RpcTransactionResponseStatus  status    = 1;
    string  tx_hash   = 2;
    string  error     = 3;
}

message GetSpendableCollateralRequest {
    string address = 1;
}

message GetSpendableCollateralResponse {
    repeated OutPoint outpoints = 1;
}

message GetBalanceRequest {
    string address = 1;
}

message GetBalanceResponse {
    string confirmed = 1;
    string unconfirmed = 2;
    string collateralized = 3;
    string collateralizedSpendable = 4;
    string unit = 5;
}

message UnlockCollateralRequest {
  OutPoint outpoint = 1;
  string  bc_address = 2;
  string  bc_private_key_hex = 3;
}

message MakerOrderInfo {
    uint64  trade_height = 1;
    uint64  deposit_height = 2;
    uint64  settle_height = 3;
    string  pays_chain_id = 4;
    string  wants_chain_id = 5;
    string  wants_address = 6;
    string  wants_unit = 7;
    string  pays_unit = 8;
    string  double_hashed_bc_address = 9;
    string  collateralized_nrg = 10;
    string  nrg_unit = 11;
    string  tx_hash = 12;
    uint32  tx_output_index = 13;
    bool    is_settled = 14;
}

message TakerOrderInfo {
    string  sends_address = 1;
    string  wants_address = 2;
    string  double_hashed_bc_address = 3;
    bool    is_settled = 4;
    string  tx_hash = 5;
    uint32  tx_output_index = 6;
    string  total_collateral = 7;
}

message MatchedOpenOrder {
    MakerOrderInfo maker = 1;
    TakerOrderInfo taker = 2;
}

message GetOpenOrdersResponse {
    repeated  MakerOrderInfo orders = 1;
}

message GetMatchedOrdersRequest {
    bool only_settled = 1;
}

message GetMatchedOrdersResponse {
    repeated MatchedOpenOrder orders = 1;
}

message PlaceMakerOrderRequest {
    uint64  shift_starts_at = 1;
    uint64  deposit_ends_at = 2;
    uint64  settle_ends_at = 3;

    string  pays_with_chain_id = 4;
    string  wants_chain_id = 5;
    string  wants_chain_address = 6;
    string  wants_unit = 7;
    string  pays_unit = 8;
    string  bc_address = 9;
    string  bc_private_key_hex = 10;

    string  collateralized_nrg = 11;
    string  nrg_unit = 12;
    string  tx_fee = 13;
}

message PlaceTakerOrderRequest {
    string  wants_chain_address = 1;
    string  sends_chain_address = 2;
    string  maker_tx_hash = 3;
    uint32  maker_tx_output_index = 4;
    string  bc_address = 5;
    string  bc_private_key_hex = 6;
    string  collateralized_nrg = 7;
    string  tx_fee = 8;
}

message TakerOrder {
    string  wants_chain_address = 1;
    string  sends_chain_address = 2;
    string  maker_tx_hash = 3;
    uint32  maker_tx_output_index = 4;
    string  collateralized_nrg = 5;
}

message PlaceTakerOrdersRequest {
    repeated TakerOrder orders = 1;
    string  bc_address = 2;
    string  bc_private_key_hex = 3;
    string  tx_fee = 4;
}

message CalculateMakerFeeRequest {
    uint64  shift_starts_at = 1;
    uint64  deposit_ends_at = 2;
    uint64  settle_ends_at = 3;
    string  pays_with_chain_id = 4;
    string  pays_unit = 5;
    string  wants_chain_id = 6;
    string  wants_unit = 7;
    string  collateralized_nrg = 8;
    string  nrg_unit = 9;
}

message CalculateTakerFeeRequest {
    string  maker_tx_hash = 1;
    uint32  maker_tx_output_index = 2;
    string  collateralized_nrg = 3;
}

message FeeResponse {
    string fee = 1;
}

message GetBlake2blRequest {
    string to_be_hashed = 1;
    uint32 times = 2;
}

message GetBlake2blResponse {
    string hash = 1;
}

message VanityConvertRequest {
    string vanity = 1;
}

message VanityConvertResponse {
    string bc_address= 1;
    string error = 2;
}

message GetRoveredBlockHashRequest {
    string blockchain = 1;
    string hash = 2;
}

message GetRoveredBlockHeightRequest {
    string blockchain = 1;
    uint32 height = 2;
}

message GetBlockHashRequest {
    string hash = 1;
}

message GetBlockHeightRequest {
    uint32 height = 1;
}

message GetBlocksRequest {
    uint32 start_height = 1;
    uint32 end_height = 2;
}

message GetBlocksResponse {
    repeated BcBlock blocks = 1;
}

message GetRoveredBlocksRequest {
    string blockchain = 1;
    uint32 start_height = 2;
    uint32 end_height = 3;
}

message GetRawMempoolResponse {
    repeated Transaction transactions = 1;
}


message GetRoveredBlocksResponse {
    repeated Block blocks = 1;
}

message GetTxRequest {
    string hash = 1;
}

message GetMarkedTxRequest {
    string blockchain = 1;
    string hash = 2;
}

message GetOutPointRequest {
    string hash = 1;
    uint32 index = 2;
}

message GetTradeStatusResponse {
    bool received = 1;
}

message GetOutPointStatusResponse {
    bool unspent = 1;
}

service Bc {

    rpc GetRoveredBlockHash(GetRoveredBlockHashRequest) returns (Block) {}
    rpc GetRoveredBlockHeight(GetRoveredBlockHeightRequest) returns (Block) {}
    rpc GetRoveredBlocks(GetRoveredBlocksRequest) returns (GetRoveredBlocksResponse) {}
    rpc GetLatestRoveredBlocks(Null) returns (GetRoveredBlocksResponse) {}

    rpc GetBlockHash(GetBlockHashRequest) returns (BcBlock) {}
    rpc GetBlockHeight(GetBlockHeightRequest) returns (BcBlock) {}
    rpc GetBlocks(GetBlocksRequest) returns (GetBlocksResponse) {}
    rpc GetLatestBlock(Null) returns (BcBlock) {}

    rpc GetTx(GetTxRequest) returns (Transaction) {}
    rpc GetMarkedTx(GetMarkedTxRequest) returns (MarkedTransaction) {}

    rpc GetTradeStatus(GetOutPointRequest) returns (GetTradeStatusResponse) {}
    rpc GetOutpointStatus(GetOutPointRequest) returns (GetOutPointStatusResponse) {}

    rpc GetRawMempool(Null) returns (GetRawMempoolResponse) {}
    rpc GetBlockForTx(GetTxRequest) returns (BcBlock) {}
    rpc GetRoveredBlockForMarkedTx(GetMarkedTxRequest) returns (Block) {}

    rpc Help (Null) returns (HelpResponse) {}
    rpc Stats (Null) returns (StatsResponse) {}
    rpc NewTx (RpcTransaction) returns (RpcTransactionResponse) {}
    rpc SendTx (Transaction) returns (RpcTransactionResponse) {}

    rpc GetBalance (GetBalanceRequest) returns (GetBalanceResponse) {}
    rpc GetSpendableCollateral (GetSpendableCollateralRequest) returns (GetSpendableCollateralResponse) {}

    rpc UnlockCollateral (UnlockCollateralRequest) returns (RpcTransactionResponse) {}

    rpc PlaceMakerOrder (PlaceMakerOrderRequest) returns (RpcTransactionResponse) {}
    rpc PlaceTakerOrder (PlaceTakerOrderRequest) returns (RpcTransactionResponse) {}
    rpc PlaceTakerOrders (PlaceTakerOrdersRequest) returns (RpcTransactionResponse) {}

    rpc CalculateMakerFee (CalculateMakerFeeRequest) returns (FeeResponse) {}
    rpc CalculateTakerFee (CalculateTakerFeeRequest) returns (FeeResponse) {}

    rpc GetOpenOrders (Null) returns (GetOpenOrdersResponse) {}
    rpc GetMatchedOrders (GetMatchedOrdersRequest) returns (GetMatchedOrdersResponse) {}

    rpc GetBlake2bl (GetBlake2blRequest) returns (GetBlake2blResponse) {}
    rpc GetBcAddressViaVanity (VanityConvertRequest) returns (VanityConvertResponse) {}
}
